import os
import sqlite3
import random
from telebot import TeleBot, types

# üîπ –¢–≤—ñ–π —Ç–æ–∫–µ–Ω
API_TOKEN = "–¢–í–û–ô_–ê–ü–Ü_–ö–õ–Æ–ß"
bot = TeleBot(API_TOKEN)

# üîπ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø–æ—Å—Ç—ñ–π–Ω–æ—ó –±–∞–∑–∏ (–ù–ï —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞–Ω–æ–≤–æ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫–æ–¥—É)
os.makedirs("db", exist_ok=True)
conn = sqlite3.connect("db/music.db", check_same_thread=False)
cur = conn.cursor()

# üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å, —è–∫—â–æ —ó—Ö —â–µ –Ω–µ–º–∞—î
cur.execute("""
CREATE TABLE IF NOT EXISTS tracks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    username TEXT,
    title TEXT,
    file_id TEXT,
    playlist TEXT
)
""")
conn.commit()


# üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ –≤–∏–±—ñ—Ä –ø–ª–µ–π–ª—ñ—Å—Ç—É
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id,
        "üéµ –ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –º—É–∑–∏—á–Ω–∏–π —Ñ–∞–π–ª, —â–æ–± –¥–æ–¥–∞—Ç–∏ –π–æ–≥–æ —É —Å–≤—ñ–π –ø–ª–µ–π–ª—ñ—Å—Ç.\n"
        "–ö–æ–º–∞–Ω–¥–∏:\n"
        "/mytracks ‚Äì —Ç–≤—ñ–π —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫—ñ–≤\n"
        "/play ‚Äì –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ –ø–ª–µ–π–ª—ñ—Å—Ç\n"
        "/mode ‚Äì –∑–º—ñ–Ω–∏—Ç–∏ —Ä–µ–∂–∏–º –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è"
    )


# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—Ä–µ–∫—É
@bot.message_handler(content_types=['audio'])
def handle_audio(message):
    user_id = message.from_user.id
    username = message.from_user.username or "–ë–µ–∑_—ñ–º–µ–Ω—ñ"
    title = message.audio.title or message.audio.file_name or "–ë–µ–∑ –Ω–∞–∑–≤–∏"
    file_id = message.audio.file_id

    cur.execute("INSERT INTO tracks (user_id, username, title, file_id, playlist) VALUES (?, ?, ?, ?, ?)",
                (user_id, username, title, file_id, "default"))
    conn.commit()

    bot.send_message(message.chat.id, f"‚úÖ –¢—Ä–µ–∫ '{title}' –¥–æ–¥–∞–Ω–æ —É —Ç–≤—ñ–π –ø–ª–µ–π–ª—ñ—Å—Ç.")


# üîπ –ü–µ—Ä–µ–≥–ª—è–¥ —Å–≤–æ—ó—Ö —Ç—Ä–µ–∫—ñ–≤
@bot.message_handler(commands=['mytracks'])
def list_tracks(message):
    user_id = message.from_user.id
    cur.execute("SELECT title FROM tracks WHERE user_id = ?", (user_id,))
    tracks = cur.fetchall()

    if not tracks:
        bot.send_message(message.chat.id, "‚ùå –£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î —Ç—Ä–µ–∫—ñ–≤.")
    else:
        text = "üéß –¢–≤–æ—ó —Ç—Ä–µ–∫–∏:\n" + "\n".join([f"‚Ä¢ {t[0]}" for t in tracks])
        bot.send_message(message.chat.id, text)


# üîπ –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è —Ä–µ–∂–∏–º—É –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
play_modes = {
    "sequential": "‚ñ∂Ô∏è –ü—ñ–¥—Ä—è–¥ —É—Å—ñ",
    "shuffle": "üîÄ –í–∏–ø–∞–¥–∫–æ–≤–æ",
    "repeat_one": "üîÇ –ü–æ–≤—Ç–æ—Ä –ø–æ—Ç–æ—á–Ω–æ–≥–æ"
}
current_mode = "sequential"


# üîπ –ó–º—ñ–Ω–∞ —Ä–µ–∂–∏–º—É
@bot.message_handler(commands=['mode'])
def change_mode(message):
    global current_mode
    markup = types.InlineKeyboardMarkup()
    for key, name in play_modes.items():
        markup.add(types.InlineKeyboardButton(name, callback_data=f"mode_{key}"))
    bot.send_message(message.chat.id, "üéõ –û–±–µ—Ä–∏ —Ä–µ–∂–∏–º –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith("mode_"))
def set_mode(call):
    global current_mode
    current_mode = call.data.replace("mode_", "")
    bot.edit_message_text(f"‚úÖ –†–µ–∂–∏–º –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: {play_modes[current_mode]}", call.message.chat.id, call.message.message_id)


# üîπ –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
@bot.message_handler(commands=['play'])
def play_playlist(message):
    user_id = message.from_user.id
    cur.execute("SELECT title, file_id FROM tracks WHERE user_id = ?", (user_id,))
    tracks = cur.fetchall()

    if not tracks:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–º–∞—î —Ç—Ä–µ–∫—ñ–≤ –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è.")
        return

    if current_mode == "shuffle":
        random.shuffle(tracks)
    elif current_mode == "repeat_one":
        tracks = [tracks[0]]

    for title, file_id in tracks:
        bot.send_audio(message.chat.id, file_id, caption=f"üéµ {title}")
        if current_mode == "repeat_one":
            break


bot.polling(none_stop=True)
